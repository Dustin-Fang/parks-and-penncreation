DB Credentials:
    username: admin
    password: CIS550parks!
    endpoint: parksdb.cqeozckq2wg2.us-east-1.rds.amazonaws.com
    port: 3306

Ari's queries:

-- List of parks containing a given animal species, sorted by abundance
SELECT P.ParkName AS Name, P.ParkId AS ParkId, S.Abundance AS Abundance
FROM Parks P JOIN Species S ON P.ParkId = S.ParkId
WHERE S.ScientificName = "Lynx rufus"
ORDER BY S.Abundance, P.ParkId;

-- Get all species within a park, sorted by abundance
SELECT S.SpeciesId AS SpeciesId, S.Category AS Category, S.SpeciesOrder AS SpeciesOrder, S.Family AS Family, S.ScientificName AS ScientificName, S.RecordStatus AS RecordStatus, S.Occurrence as Occurrence, S.Nativeness AS Nativeness, S.Abundance AS Abundance, S.Seasonality AS Seasonality, S.ConservationStatus AS ConservationStatus
FROM Parks P JOIN Species S ON P.ParkId = S.ParkId
WHERE P.ParkName = "Crater Lake National Park"
ORDER BY S.Abundance;

-- Most common weather events experienced by a species in a given year
WITH WeatherTypes AS (
    WITH SpeciesLocations AS (
        SELECT S.ParkId AS ParkId, P.Latitude AS Latitude, P.Longitude AS Longitude
        FROM Species S JOIN Parks P on S.ParkId = P.ParkId
        WHERE S.ScientificName = 'Lynx rufus'
        )
    SELECT WE.WeatherType AS WeatherType
    FROM WeatherEvents WE JOIN SpeciesLocations SL ON ABS(WE.Latitude - SL.Latitude) <= 5.0 AND ABS(WE.Longitude - SL.Longitude) <= 5.0
    WHERE WE.StartTime >= '2021-01-01' AND WE.EndTime <= '2021-12-31')
SELECT WT.WeatherType AS WeatherType, COUNT(WT.WeatherType) AS Occurances
FROM WeatherTypes WT
GROUP BY WT.WeatherType
ORDER BY COUNT(WT.WeatherType) DESC

Gian's queries:
# ------------------------Simple Queries -------------------------- #
# Getting a parkâ€™s info by zip code (example zipcode of 4609)
SELECT P.ParkName AS Name, P.ParkCode AS ParkCode, P.Acres as Acres, P.Latitude AS Latitude, P.Longitude as Longitude
FROM Parks P JOIN Zipcode Z ON P.ParkId = Z.ParkId
WHERE Z.Zipcode = 4609;

# Getting a park's info by state (example state of colorado)
SELECT DISTINCT P.ParkName AS Name, P.ParkCode AS ParkCode, P.Acres as Acres, P.Latitude AS Latitude, P.Longitude as Longitude
FROM Parks P, WeatherEvents W
WHERE ABS(W.Latitude - P.Latitude) <= 1.0 AND ABS(W.Longitude - P.Longitude) <= 1.0 AND W.WeatherState = 'CO';

# Getting a park's info by name (example park name of Rocky Mountain National Park
SELECT P.ParkName AS Name, P.ParkCode AS ParkCode, P.Acres as Acres, P.Latitude AS Latitude, P.Longitude as Longitude
FROM Parks P
WHERE P.ParkName = 'Rocky Mountain National Park';

# Get a species' info by a common name (example - fox)
SELECT S.*
FROM Species S, CommonNames CN
WHERE CN.CommonName = 'Fox' AND S.SpeciesID = CN.SpeciesID;

# Get a species' info by a scientific name (Lynx Rufus)
SELECT S.*
FROM Species S
WHERE S.ScientificName = 'Lynx Rufus';

# Get a species' info by zipcode (example zipcode = 4609)
SELECT S.*
FROM Species S, Zipcode Z
WHERE Z.Zipcode = 4609 AND Z.ParkID = S.ParkId;

# Get a species' info by state (example state - Colorado) - THIS ONE IS SUPER NOT OPTIMAL
# SELECT S.*
# FROM Species S, Parks P, WeatherEvents W
# WHERE ABS(W.Latitude - P.Latitude) <= 1.0 AND ABS(W.Longitude - P.Longitude) <= 1.0
  # AND W.WeatherState = 'CO' AND P.ParkID = S.ParkID;

# ------------------------Complex Queries -------------------------- #
# Given some latitude & longitude ranges (an area) that
# collects a set of parks, find the type of weather event that
# prevails the most across some time range (season)
# Example Latitude & Longitude Range: Southern US <= 40 latitude and between -120 -70 longtitude
# Example time range / season: Summer (Between June 1 and August 31)
SELECT W.WeatherType, SUM(W.Duration) as TotalTime
FROM WeatherEvents W
WHERE W.Latitude <= 40.0 AND W.Longitude <= -70.0 AND W.Longitude >= -120.0
  AND (EXTRACT(MONTH FROM W.StartTime) BETWEEN 6 AND 8) AND (EXTRACT(MONTH FROM W.EndTime) BETWEEN 6 AND 8)
GROUP BY W.WeatherType
ORDER BY TotalTime DESC
LIMIT 1;

# Similarly, given some area and time range, for each weather event
# type & severity combination, order species by total time (duration)
# experiencing that combination of weather event
# Example Latitude & Longitude Range: Southern US <= 40 latitude and between -120 -70 longtitude
# Example time range / season: Summer (Between June 1 and August 31)
# Also currently suboptimal
SELECT S.*, W.WeatherType, W.Severity, SUM(W.Duration) as TotalTime
FROM (SELECT * FROM WeatherEvents where Latitude <= 40.0 AND Longitude <= -70.0 AND Longitude >= -120.0) AS W
JOIN Species S JOIN Parks P on P.ParkID = S.ParkID AND ABS(W.Latitude - P.Latitude) <= 1.0 AND ABS(W.Longitude - P.Longitude) <= 1.0
WHERE (EXTRACT(MONTH FROM W.StartTime) BETWEEN 6 AND 8) AND (EXTRACT(MONTH FROM W.EndTime) BETWEEN 6 AND 8)
GROUP BY W.WeatherType, W.Severity
ORDER BY TotalTime DESC;



Dustin's queries:
-- Animal of the day --
SELECT *
FROM Species
ORDER BY RAND()
LIMIT 1;

-- Species in the park that experiences the highest percentage of a given weather event type --
-- Ex: WeatherType = 'Cold' --

WITH Highest_Occurence_Park AS (
    SELECT ParkId, COUNT(EventId) / (SELECT COUNT(EventId) FROM WeatherEvents WHERE WeatherType = 'COLD') as WeatherPercentage
    FROM (SELECT EventId, Latitude, Longitude, WeatherType from WeatherEvents) as w
        JOIN (SELECT Latitude, Longitude, ParkId FROM Parks) as p on
        ABS(w.Latitude - p.Latitude) <= 5.0 AND ABS(w.Longitude - p.Longitude) <= 5.0
    WHERE WeatherType = 'Cold'
    GROUP BY ParkId
    ORDER BY WeatherPercentage DESC
    LIMIT 1
    )
SELECT S.SpeciesId, CommonName
FROM (SELECT SpeciesId, ParkId FROM Species) S JOIN (SELECT ParkId FROM Highest_Occurence_Park) P2 on P2.ParkId = S.ParkId
    JOIN CommonNames CN on S.SpeciesId = CN.SpeciesId;

Shanna's queries:
# ------------------------Simple Queries -------------------------- #
# Fun fact: This park has the largesy number of different species 
# Count the distinct species in each park, order the parks by count,
# and return the name of the first park 

WITH mostPop AS (
  SELECT ParkId, SpeciesId, ScientificName, COUNT(DISTINCT SpeciesId) as ct
  FROM Species
  GROUP BY ParkId
  ORDER BY ct DESC
  LIMIT 1)
Select ParkName
FROM Parks
WHERE ParkId IN (SELECT ParkId from mostPop);

# For the park with the highest number of endangered and threatened species, 
# what percentage of the animals are native to that area? 
what percentage is not common/abundant in the park?

With mostEndangered AS (
    SELECT SpeciesId, Nativeness, ConservationStatus, Abundance, S.ParkId, COUNT(SpeciesId) as tot, P.ParkName
    FROM Parks P JOIN Species S ON P.ParkId = S.ParkId
    GROUP BY ParkId
    HAVING ConservationStatus IN ('Endangered', 'Threatened', 'Species of Concern')
    ORDER BY tot DESC
    LIMIT 1
)
SELECT ParkId, Abundance, (SELECT COUNT(SpeciesId) WHERE Nativeness='Native') / COUNT(SpeciesId) AS NotNative,
        (SELECT COUNT(SpeciesId) WHERE Abundance IN ('Uncommon', 'Rare', 'Occasional')) / COUNT(SpeciesId) as Common
FROM Species
GROUP BY ParkId
HAVING ParkId IN (Select ParkId from mostEndangered);



